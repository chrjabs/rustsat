name: GitHub Pages

on:
  push:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
      - name: Build rust docs
        run: |
          mkdir -p _site/
          cargo +nightly doc -Zunstable-options -Zrustdoc-scrape-examples --workspace --no-deps
          mv target/doc/ _site/main/
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Build Python package
        uses: PyO3/maturin-action@v1
        with:
          args: -i python --manifest-path pyapi/Cargo.toml
      - name: Install Python package
        run: pip install --no-index --find-links target/wheels/ rustsat
      - name: Build Python API docs
        run: pip install pdoc && pdoc -o _site/pyapi/ --no-show-source rustsat
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
