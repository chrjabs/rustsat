{% include 'codegen-header.j2' %}

#include <assert.h>

#include "rustsat.h"

void clause_counter(int lit, void *data) {
  if (!lit) {
    int *cnt = (int *)data;
    (*cnt)++;
  }
}

int main() {
  {{ enc.name }} *{{ enc.id }} = {{ enc.id }}_new();
  assert({{ enc.id }}_add({{ enc.id }}, 1, 1) == Ok);
  assert({{ enc.id }}_add({{ enc.id }}, 2, 2) == Ok);
  assert({{ enc.id }}_add({{ enc.id }}, 3, 3) == Ok);
  assert({{ enc.id }}_add({{ enc.id }}, 4, 4) == Ok);
  uint32_t n_used = 4;
  uint32_t n_clauses = 0;
  {{ enc.id }}_reserve({{ enc.id }}, &n_used);
  assert(n_used == {{ enc.n_vars_reserve }});
  {%- if enc.ub %}
  {{ enc.id }}_encode_ub({{ enc.id }}, 0, 6, &n_used, &clause_counter, &n_clauses);
  assert(n_used == {{ enc.n_vars_reserve }});
  {%- endif -%}
  {%- if enc.lb %}
  {{ enc.id }}_encode_ub({{ enc.id }}, 0, 6, &n_used, &clause_counter, &n_clauses);
  assert(n_used == {{ enc.n_vars_reserve }});
  {%- endif %}
  {{ enc.id }}_drop({{ enc.id }});
  return 0;
}

