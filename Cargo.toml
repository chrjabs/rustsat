[workspace]
members = [
  # keep-sorted start
  "batsat",
  "cadical",
  "capi",
  "codegen",
  "glucose",
  "ipasir",
  "kissat",
  "minisat",
  "pigeons",
  "pyapi",
  "solvertests",
  "tools",
  # keep-sorted end
]
resolver = "2"

[workspace.package]
version = "0.7.3"
license = "MIT"
edition = "2021"
rust-version = "1.76.0" # update the crate documentation if you change this

[workspace.dependencies]
# keep-sorted start block=yes
anyhow = "1.0.100"
bindgen = { version = "0.72.1", default-features = false, features = [
  "runtime",
] }
bzip2 = "0.5.2"
cc = { version = "1.2.39", features = ["parallel"] }
chrono = "0.4.42"
clap = { version = "4.5.48", features = ["derive", "cargo"] }
cmake = "0.1.54"
concolor-clap = "0.1.0"
cpu-time = "1.0.0"
flate2 = { version = "1.1.2", features = ["zlib-ng"], default-features = false }
git2 = "0.20.2"
glob = "0.3.3"
itertools = "0.14.0"
libtest-mimic = "0.8.1"
nom = "7.1.3"
pigeons = { version = "0.2.1", path = "./pigeons" }
rand = "0.9.2"
rand_chacha = "0.9.0"
rustc-hash = "2.1.1"
rustsat = { version = "0.7.3", path = "./", default-features = false }
rustsat-cadical = { version = "0.7.3", path = "./cadical" }
rustsat-minisat = { version = "0.7.3", path = "./minisat" }
rustsat-solvertests = { path = "./solvertests" }
serde = { version = "1.0.228", features = ["derive"] }
serde_json = "1.0.145"
signal-hook = "0.3.18"
tempfile = "3.23.0"
termcolor = "1.4.1"
thiserror = "2.0.16"
visibility = "0.1.1"
web-time = "1.1.0"
xz2 = "0.1.7"
# keep-sorted end

[package]
name = "rustsat"
version.workspace = true
edition.workspace = true
authors = ["Christoph Jabs <christoph.jabs@helsinki.fi>"]
license.workspace = true
description = "This library aims to provide implementations of elements commonly used in the development on software in the area of satisfiability solving. The focus of the library is to provide as much ease of use without giving up on performance."
keywords = ["sat", "satisfiability", "encodings"]
repository = "https://github.com/chrjabs/rustsat"
readme = "README.md"
rust-version.workspace = true
include = [
  "LICENSE",
  "CHANGELOG.md",
  "README.md",
  "/src/",
  "/examples/",
  "/docs/",
]

[dependencies]
# keep-sorted start
anyhow.workspace = true
bzip2 = { workspace = true, optional = true }
flate2 = { workspace = true, optional = true }
itertools.workspace = true
nom.workspace = true
pigeons = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
rustc-hash = { workspace = true, optional = true }
serde = { workspace = true, optional = true }
tempfile.workspace = true
thiserror.workspace = true
visibility = { workspace = true, optional = true }
xz2 = { workspace = true, optional = true }
# keep-sorted end

[dev-dependencies]
# keep-sorted start
clap.workspace = true
concolor-clap.workspace = true
rustsat-minisat = { path = "./minisat" }
rustsat-solvertests.workspace = true
rustsat-tools = { path = "./tools" }
serde_json.workspace = true
termcolor.workspace = true
# keep-sorted end

[target.'cfg(any(target_family = "unix", target_family = "windows"))'.dependencies]
cpu-time.workspace = true

[target.'cfg(not(any(target_family = "unix", target_family = "windows")))'.dependencies]
web-time.workspace = true

[features]
default = ["optimization", "fxhash"]
internals = ["dep:visibility"]
fxhash = ["dep:rustc-hash"]
optimization = []
multiopt = ["optimization"]
compression = ["dep:bzip2", "dep:flate2", "dep:xz2"]
rand = ["dep:rand"]
bench = []
ipasir-display = []
serde = ["dep:serde", "pigeons/serde"]
proof-logging = ["dep:pigeons"]
verbose-proofs = ["proof-logging"]
all = [
  "multiopt",
  "compression",
  "rand",
  "fxhash",
  "serde",
  "proof-logging",
  "verbose-proofs",
]

[package.metadata.docs.rs]
features = ["all", "internals"]
rustdoc-args = ["--cfg", "docsrs"]
cargo-args = ["-Zunstable-options", "-Zrustdoc-scrape-examples"]

[[example]]
name = "check-solution"
doc-scrape-examples = true
required-features = ["optimization", "multiopt"]

[[example]]
name = "cnf2opb"
doc-scrape-examples = true

[[example]]
name = "gbmosplit"
doc-scrape-examples = true
required-features = ["optimization"]

[[example]]
name = "mcnf2opb"
doc-scrape-examples = true
required-features = ["multiopt"]

[[example]]
name = "opb2cnf"
doc-scrape-examples = true

[[example]]
name = "opb2mcnf"
doc-scrape-examples = true
required-features = ["multiopt"]

[[example]]
name = "opb2wcnf"
doc-scrape-examples = true
required-features = ["optimization"]

[[example]]
name = "profiling"
doc-scrape-examples = true

[[example]]
name = "print-lits"
doc-scrape-examples = true

[[example]]
name = "shuffledimacs"
doc-scrape-examples = true
required-features = ["optimization", "multiopt"]

[[example]]
name = "wcnf2opb"
doc-scrape-examples = true
required-features = ["optimization"]

[profile.profiling]
inherits = "release"
debug = 1

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(kani)'] }
