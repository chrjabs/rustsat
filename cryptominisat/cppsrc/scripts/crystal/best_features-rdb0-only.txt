rdb0.uip1_ranking_rel
(rdb0.act_ranking_rel/rdb0.last_touched_diff)
(rdb0.props_made/rdb0_common.avg_props)
rdb0.last_touched_diff
(rdb0.glue/cl.glueHist_avg)
rdb0.glue
(rdb0.sum_props_made/cl.time_inside_solver)
((rdb0.sum_props_made/cl.time_inside_solver)/(rdb0.glue/rdb0_common.avg_glue))
(cl.glueHist_longterm_avg/cl.glue_before_minim)
((rdb0.sum_uip1_used/cl.time_inside_solver)/rdb0.discounted_props_made)
(rdb0.glue/(rdb0.props_made/rdb0_common.avg_props))
(rdb0.prop_ranking_rel/(rdb0.uip1_used/rdb0_common.avg_uip1_used))
(cl.overlapHistLT_avg/cl.conflSizeHist_avg)
rdb0.discounted_uip1_used
(cl.glueHistLT_avg/rdb0.discounted_props_made)
(rdb0.uip1_ranking_rel/rdb0_common.avg_uip1_used)
(cl.num_antecedents/(rdb0.discounted_uip1_used/rdb0_common.avg_uip1_used))
(cl.glueHist_avg/cl.atedecents_binRed)
((rdb0.act_ranking_rel/rdb0.last_touched_diff)*(rdb0.uip1_ranking_rel/rdb0_common.avg_uip1_used))
(cl.atedecents_binIrred*rdb0_common.avg_uip1_used)
# Correlation check wants these:
#rdb0_common.avg_uip1_used
#rdb0.uip1_used
#rdb0.discounted_uip1_used2
#rdb0.discounted_props_made2
#rdb0.props_made
#rdb0.sum_props_per_time_ranking_rel
#rdb0.discounted_uip1_used3
#rdb0.sum_uip1_per_time_ranking_rel

#
# Some old stuff
#(cl.conflicts-rdb0.introduced_at_conflict)
#cl.atedecents_binRed
#rdb0.discounted_uip1_used3
#rdb0_common.num_vars
#cl.glueHist_avg
#rdb0.discounted_props_made3
#cl.num_antecedents
#rdb0_common.num_bin_irred_cls
#cl.trailDepthHistLT_avg
#
#
################
# Features we deleted due to high correlation
#     (based on data forever-comb-cut1-3.0-cut2-25.0-limit-1000.dat, MD5: c95208f18684a1c93887b161a4380e1a)
################
#rdb0.prop_ranking_rel
#cl.orig_glue
#(log2(cl.glue_before_minim)/(rdb0.sum_uip1_used/cl.time_inside_solver))
#(rdb0.glue/cl.glueHistLT_avg)
#((rdb0.sum_props_made/cl.time_inside_solver)/cl.num_total_lits_antecedents)
#(rdb0.discounted_uip1_used3*rdb0_common.glueHistLT_avg)
#((rdb0.sum_props_made/cl.time_inside_solver)*(rdb0.sum_props_made/cl.time_inside_solver)/(rdb0.glue/rdb0_common.avg_glue))
#rdb0.sum_props_per_time_ranking_rel
#(rdb0.glue/rdb0_common.conflSizeHistLT_avg)
#(cl.glueHistLT_avg/rdb0.uip1_used)
#rdb0.sum_uip1_per_time_ranking_rel
#(rdb0.size/rdb0_common.avg_glue)
#(rdb0.discounted_props_made/cl.numResolutionsHistLT_avg)
#((cl.overlapHistLT_avg/cl.conflSizeHist_avg)*(rdb0.discounted_uip1_used))
#(log2(cl.num_antecedents)/cl.num_total_lits_antecedents)
#(rdb0.size/rdb0.sum_uip1_used)
